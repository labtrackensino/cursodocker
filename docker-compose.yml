# docker-compose.yml
version: "2.3"
services:

  api:
    build: ./cursodocker-api
    scale: 3
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "3333-3339:3333"

  front:
    build: ./cursodocker-front
    restart: always
    depends_on:
      - api
    ports:
      - "8080:80"

  postgres:
    image: postgres:10.4
    command:
      - "postgres"
      - "-c"
      - "max_connections=200"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=3GB"
      - "-c"
      - "maintenance_work_mem=256MB"
      - "-c"
      - "checkpoint_completion_target=0.7"
      - "-c"
      - "wal_buffers=16MB"
      - "-c"
      - "default_statistics_target=100"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "effective_io_concurrency=200"
      - "-c"
      - "work_mem=2621kB"
      - "-c"
      - "min_wal_size=1GB"
      - "-c"
      - "max_wal_size=4GB"
      - "-c"
      - "max_worker_processes=4"
      - "-c"
      - "max_parallel_workers_per_gather=2"
      - "-c"
      - "max_parallel_workers=4"
    restart: always
    volumes:
      - ~/docker-volumes/cursodocker/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U cursodocker"]
      interval: 50s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: cursodocker
